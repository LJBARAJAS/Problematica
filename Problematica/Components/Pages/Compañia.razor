@page "/Empleados"
@page "/Empleados/editar/{id:int}"
@using Problematica.Repositorio
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioEmpleados _repositorioEmpleados

<PageTitle>Lista de empleados</PageTitle>
<h3>Lista de empleados</h3>

<EditForm Model="_empleado" OnValidSubmit="@Agregar">
    <DataAnnotationsValidator />

    <div class="form-group mb-3 row align-items-center">
        <label for="nombre" class="col-sm-1 col-form-label">Nombre</label>
        <div class="col-sm-10">
            <InputText id="nombre" class="form-control" @bind-Value="_empleado.Nombre" />
            <ValidationMessage For="@(() => _empleado.Nombre)" />
        </div>
    </div>

    <div class="form-group mb-3 row align-items-center">
        <label for="numempleado" class="col-sm-1 col-form-label">NumEmpleado</label>
        <div class="col-sm-10">
            <InputNumber id="numempleado" class="form-control" @bind-Value="_empleado.NumEmpleado" />
            <ValidationMessage For="@(() => _empleado.NumEmpleado)" />
        </div>
    </div>

    <div class="form-group mb-3">
        <label for="departamento">Selecciona un departamento:</label>
        <select id="departamento" class="form-control" @bind="_empleado.Departamento">
            <option value="">-- Selecciona una opción --</option>
            <option value="Marketing">Merketing</option>
            <option value="Ventas">Ventas</option>
            <option value="Sistemas">Sistemas</option>
            <option value="Calidad">Calidad</option>
            <option value="Legal">Legal</option>
        </select>
        <ValidationMessage For="@(() => _empleado.Departamento)" />
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>

    <div class="@($"mt-2 alert {(string.IsNullOrWhiteSpace(mensajeError) ? "" : "alert-danger")}")">
        @mensajeError
    </div>
</EditForm>

<h4 class="mt-4">Lista de alumnos</h4>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Numero de mepleado</th>
            <th>Departamento</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var e in Empleados)
        {
            <tr>
                <td>@e.Nombre</td>
                <td>@e.NumEmpleado</td>
                <td>@e.Departamento</td>
                <td>
                    <button class="btn btn-outline" @onclick="() => EliminarEmpleado(e)">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="black" class="bi bi-trash3" viewBox="0 0 16 16">
                            <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                        </svg>
                    </button>
                </td>
                <td>
                    <button class="btn btn-outline" @onclick="() => Modificar(e.Id)">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="black" class="bi bi-pencil-square" viewBox="0 0 16 16">
                            <path d="M15.502 1.94a.5.5 0 0 1 0 .706l-1 1a.5.5 0 0 1-.707 0L13 2.707l1-1a.5.5 0 0 1 .707 0l.795.796zm-1.75 2.456L11.5 2.146 4 9.646V12h2.354l7.398-7.398z" />
                            <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5V6.707a.5.5 0 0 0-1 0V13.5a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9.5a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z" />
                        </svg>
                    </button>

                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    [Parameter]
    public int id { set; get; }
    private Empleado _empleado = new Empleado();
    private List<Empleado> Empleados = new List<Empleado>();
    private string mensajeError = string.Empty;
    private bool esEdicion => _empleado.Id > 0;



    protected override async Task OnInitializedAsync()
    {
        Empleados = await _repositorioEmpleados.GetAll();
    }



    private async Task Agregar()
    {
        mensajeError = string.Empty;

        if (Empleados.Any(e => e.NumEmpleado == _empleado.NumEmpleado))
        {
            mensajeError = $"El número de empleado {_empleado.NumEmpleado} ya está registrado.";
            return;
        }

        await _repositorioEmpleados.Add(_empleado);

        _empleado = new Empleado();
        _navigator.NavigateTo("/Empleados", true);
    }




    private async void EliminarEmpleado(Empleado e)
    {
        await _repositorioEmpleados.Delete(e.Id);
        Empleados.Remove(e);
        StateHasChanged();
    }

    private async void Modificar(int id)
    {
        _navigator.NavigateTo($"/Empleados/editar/{id}");
    }
}
